#lang rhombus/and_meta

export:
  >..
  >..=

fun desc_range(from :: Int, to :: Int || matching(#neginf) = #neginf, incl :: Boolean = #true) :: Sequence:
    if from >= to
    | Sequence.make(
        ~initial_position: from,
        ~position_to_element: fun(i): i,
        ~position_to_next: fun(i): i - 1,
        ~continue_at_position: fun(i): if incl | i >= to | i > to
      )
    | error("desc_range requires a starting point greater than or equal to the ending point")
    
macro >..:
  ~order: enumeration
| '$a >.. $b $()':
    'desc_range($a, $b, #false)'
| '$a >.. $()':
    'desc_range($a)'

operator ((a :: Int) >..= (b :: Int)):
  ~weaker_than: + - / * 
  desc_range(a, b, #true)


